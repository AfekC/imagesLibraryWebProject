openapi: 3.0.0
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9

tags:
  - name: image
    description: all image routes
  - name: user
    description: all user routes

paths:
  /image:
    get:
      tags:
        - image
      summary: get images data (name, size, creator)
      responses:
        '200':
          description: succeeded
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /image/{id}:
    get:
      tags:
        - image
      summary: get image to preview
      responses:
        '200':
          description: succeeded
    delete:
      tags:
        - image
      security:
        - bearerAuth: []
      summary: delete an image
      responses:
        '200':
          description: delete succeeded
  /image/{id}/comments:
    get:
      tags:
        - image
      summary: get all comments on image
      responses:
        '200':
          description: succeeded
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    username:
                      type: string
                    created:
                      type: string
                    text:
                      type: string
  /image/upload:
    post:
      tags:
        - image
      security:
        - bearerAuth: []
      summary: Upload image
      parameters:
        - in: path
          required: true
          name: body
          schema:
            type: object
            properties:
              name:
                type: string
              file:
                type: object
      responses:
        '200':
          description: Upload succeeded
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /image/{id}/update:
    post:
      tags:
        - image
      security:
        - bearerAuth: []
      summary: update the image
      parameters:
        - in: path
          required: true
          name: body
          schema:
            type: object
            properties:
              name:
                type: string
              file:
                type: object
      responses:
        '200':
          description: update succeeded
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /user:
    get:
      tags:
        - user
      security:
        - bearerAuth: []
      summary: return user by token.
      responses:
        '200':
          description: returns a user
          content:
            application/json:
              schema:
                type: object
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /user/logout:
    post:
      tags:
        - user
      security:
        - bearerAuth: []
      summary: logout
      responses:
        '200':
          description: logged out successfully
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /user/login:
    post:
      tags:
        - user
      summary: login to the website
      parameters:
        - in: path
          required: true
          name: body
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
      responses:
        '200':
          description: login successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  user:
                    type: object
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /user/signup:
    post:
      tags:
        - user
      summary: signup to the website
      parameters:
        - in: path
          required: true
          name: body
          schema:
            type: object
            properties:
              firstname:
                type: string
              lastname:
                type: string
              userName:
                type: string
              password:
                type: string
      responses:
        '200':
          description: signup successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  user:
                    type: object
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /user/update:
    post:
      tags:
        - user
      security:
        - bearerAuth: []
      summary: update user's data
      parameters:
        - in: path
          required: true
          name: body
          schema:
            type: object
      responses:
        '200':
          description: succeeded
        '401':
          $ref: '#/components/responses/UnauthorizedError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
      headers:
        Access-Token:
          schema:
            type: string

security:
  - bearerAuth: []