openapi: 3.0.0
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9

servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing

paths:
  /item/{id}:
    get:
      security:
        - bearerAuth: []
      summary: download a file
      responses:
        '200':
          description: secceded
        '400': 
          description: error while download
        '500':
          description: error while accessing file
    delete:
      summary: delete an item
      responses:
        '200':
          description: Upload secceded
        '400': 
          description: error while creation
  /item/{id}/users:
    get:
      security:
        - bearerAuth: []
      summary: get users with access to the item
      responses:
        '200':
          description: secceded
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
        '400': 
          description: error
  /item/{id}/comments:
    get:
      security:
        - bearerAuth: []
      summary: get all comments on item
      responses:
        '200':
          description: secceded
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    username:
                      type: string
                    created:
                      type: string
                    text:
                      type: string
        '400':
          description: general error
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
      security:
        - bearerAuth: []
      summary: add a comment on item
      parameters:
        - in: path
          required: true
          name: body
          schema:
            type: object
            properties:
              text:
                type: boolean
      responses:
        '200':
          description: succeded
        '400':
          description: general error
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /item/access/{id}:
    post:
      security:
        - bearerAuth: []
      summary: change the authorized users who can access the item
      parameters:
        - in: path
          required: true
          name: body
          schema:
            type: object
            properties:
              isPublic:
                type: boolean
              usersToShare:
                type: array
      responses:
        '200':
          description: secceded
        '400': 
          description: error while changing access
  /item/dir/{id}:
    get:
      security:
        - bearerAuth: []
      summary: Return all items in the directory specified
      responses:
        '200':
          description: Returns a list of items
          content:
            application/json:
              schema:
                type: array
  /item/file/upload:
    post:
      security:
        - bearerAuth: []
      summary: Upload multiple files to directory
      parameters:
        - in: path
          required: true
          name: body
          schema:
            type: object
            properties:
              files:
                type: array
              parentItem:
                type: string
              isPublic:
                type: boolean
              creator:
                type: string
              usersToShare:
                type: array
      responses:
        '200':
          description: Upload secceded
        '400': 
          $ref: '#/components/responses/UnauthorizedError'
  /item/folder/upload:
    post:
      security:
        - bearerAuth: []
      summary: Upload a folder in specified folder
      parameters:
        - in: path
          required: true
          name: body
          schema:
            type: object
            properties:
              name:
                type: string
              parentItem:
                type: string
              isPublic:
                type: boolean
              creator:
                type: string
              usersToShare:
                type: array
      responses:
        '200': 
          description: created seccesfuly
        '400': 
          description: error while creation
  /user:
    get:
      security:
        - bearerAuth: []
      summary: return user by token.
      responses:
        '200':
          description: returns a user
          content:
            application/json:
              schema: 
                type: object
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /user/login:
    post:
      security:
        - bearerAuth: []
      summary: login to the website
      parameters:
        - in: path
          required: true
          name: body
          schema:
            type: object
            properties:
              username: 
                type: string
              password:
                type: string
      responses:
        '200':
          description: login successfully
          content:
            application/json:
              schema: 
                type: object
                properties:
                  accessToken: 
                    type: string
                  user:
                    type: object
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /user/signin:
    post:
      summary: signin to the website
      parameters:
        - in: path
          required: true
          name: body
          schema:
            type: object
            properties:
              firstName:
                type: string
              lastName:
                type: string
              userName:
                type: string
              password:
                type: string
      responses:
        '200':
          description: signin successfully
          content:
            application/json:
              schema: 
                type: object
                properties:
                  accessToken: 
                    type: string
                  user:
                    type: object
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /user/all:
    get:
      summary: return all users.
      responses:
        '200':
          description: returns all users
          content:
            application/json:
              schema: 
                type: array
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: number
                      username:
                        type: string
  /user/update:
    post:
      security:
        - bearerAuth: []
      summary: update user's data
      parameters:
        - in: path
          required: true
          name: body
          schema:
            type: object
      responses:
        '200':
          description: succeded
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /user/update/password:
    post:
      security:
        - bearerAuth: []
      summary: update user's password
      parameters:
        - in: path
          required: true
          name: body
          schema:
            type: object
            properties:
              oldPassword:
                type: string
              newPassword:
                type: string
      responses:
        '200':
          description: succeded
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /user/update/image:
    post:
      security:
        - bearerAuth: []
      summary: update user's image
      parameters:
        - in: path
          required: true
          name: file
          schema:
            type: object
      responses:
        '200':
          description: succeded
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /user/username/{id}:
    get:
      summary: return username by id.
      responses:
        '200':
          description: returns the username requested
          content:
            application/json:
              schema: 
                type: object
                properties:
                  username:
                    type: string

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
      headers:
        Access-Token:
          schema:
            type: string
security:
  - bearerAuth: []